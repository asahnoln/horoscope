#+TITLE: Horoscope Compatibility Finder
#+AUTHOR: Arthur Aslanyan
#+EMAIL: arthur.e.aslanyan@gmail.com
#+DESCRIPTION: Horoscope module description

** Table of Contents :toc:
  - [[#about-horoscope-module][About Horoscope Module]]
  - [[#usage][Usage]]
  - [[#implementation][Implementation]]

** About Horoscope Module
Horoscope calculates relationship compatibility between two signs. Or anything else. With extra parameters!

*** Motivation
This project is inspired by [[https://vm.tiktok.com/ZSJqcaSX1/][the same project]] written in JavaScript by TikTok user ~@knotri~.

The original work has one flaw: it is /too/ random! E.g. if you give that function arguments ~('Pisces', 'Scorpio')~ and ~('Scorpio', 'Pisces')~, it returns different results. Even if you give the same inputs, it returns different results each time you use it.

I believe horoscope should give you the same results each time you use. 'cause the stars don't move /that/ fast, y'know!

This is where Haskell comes in: a pure functional language shines when you need the /same/ output for the /same/ input!

** Usage
Here's the main part. You can try it in ~ghci~ or in your app:

#+begin_src haskell
> compatible "Cancer" "Gemini" []
True
#+end_src

#+begin_src haskell
> compatible "Gemini" "Cancer" []
True
#+end_src

#+begin_src haskell
> compatible "Cancer" "Cancer" ["love"]
False
#+end_src

#+begin_src haskell
> compatible "Cancer" "Cancer" ["friendship"]
True
#+end_src

You can even check what horoscope says about relationship between Cancer and number 2:

#+begin_src haskell
> compatible "Cancer" 2 []
True
#+end_src

Oh wow! They are compatible 😉

Experiment!

#+begin_src haskell
> compatible 'A' 0.5 [True, False]
False
#+end_src

I don't know what that means, but this is serious 🤔

** Implementation
You can find implementation details in [[file:horoscope.org::*Table of Contents][Horoscope Module Implementation]] document.

/Beware:/ some of the magic might be lost 😏
